diff --git a/cmd/kubeadm/app/cmd/init.go b/cmd/kubeadm/app/cmd/init.go
index 57e87d66..942b2057 100644
--- a/cmd/kubeadm/app/cmd/init.go
+++ b/cmd/kubeadm/app/cmd/init.go
@@ -172,9 +172,9 @@ func NewCmdInit(out io.Writer, initOptions *initOptions) *cobra.Command {
 
 	// initialize the workflow runner with the list of phases
 	initRunner.AppendPhase(phases.NewPreflightPhase())
-	initRunner.AppendPhase(phases.NewKubeletStartPhase())
 	initRunner.AppendPhase(phases.NewCertsPhase())
 	initRunner.AppendPhase(phases.NewKubeConfigPhase())
+	initRunner.AppendPhase(phases.NewKubeletStartPhase())
 	initRunner.AppendPhase(phases.NewControlPlanePhase())
 	initRunner.AppendPhase(phases.NewEtcdPhase())
 	initRunner.AppendPhase(phases.NewWaitControlPlanePhase())
diff --git a/cmd/kubeadm/app/util/initsystem/initsystem_unix.go b/cmd/kubeadm/app/util/initsystem/initsystem_unix.go
index e3df10c8..ff17f346 100644
--- a/cmd/kubeadm/app/util/initsystem/initsystem_unix.go
+++ b/cmd/kubeadm/app/util/initsystem/initsystem_unix.go
@@ -65,8 +65,9 @@ func (openrc OpenRCInitSystem) ServiceIsEnabled(service string) bool {
 // ServiceIsActive ensures the service is running, or attempting to run. (crash looping in the case of kubelet)
 func (openrc OpenRCInitSystem) ServiceIsActive(service string) bool {
 	args := []string{service, "status"}
-	outBytes, _ := exec.Command("rc-service", args...).Output()
-	return !strings.Contains(string(outBytes), "stopped")
+	outBytes, _ := exec.Command("rc-service", args...).CombinedOutput()
+	outStr := string(outBytes)
+	return !strings.Contains(outStr, "stopped") && !strings.Contains(outStr, "does not exist")
 }
 
 // EnableCommand return a string describing how to enable a service
